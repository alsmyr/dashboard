@model StockholmDashboard.Models.NotebookService
<div class="col-md-5">
    <div class="panel 
         @if (ViewData.Model.UITestSummaries.Count + ViewData.Model.APITestSummaries.Count > 0)
    {
        if ((ViewData.Model.UITestSummaries.Count > 0 ? ViewData.Model.UITestSummaries[0].NotPassed : 0) + (ViewData.Model.APITestSummaries.Count > 0 ? ViewData.Model.APITestSummaries[0].NotPassed : 0) > 0)
        {

            @:panel-danger
        }
        else
        {
           @:panel-success
        }
    }
    else
         {
              @:panel-primary
         }
         
    ">
        
        
     <div class="panel-heading">
    <h3 class="panel-title">
    @Html.ActionLink(ViewData.Model.Name, "Service", new { id = ViewData.Model.ID })
        &nbsp;&nbsp;<a href="?refresh=@ViewData.Model.ID"><span class="glyphicon glyphicon-refresh"></span></a>
    </h3>
    </div>
    <div class="panel-body">

        <div class="row">
            <div class="col-md-12">
                @Html.DisplayFor(m => m.Description)
            </div>

        </div>
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(m => m.UI_Url)
            </div>
            <div class="col-md-9">
                <a href="@Html.ViewData.Model.UI_Url">@Html.ViewData.Model.UI_Url</a>
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(m => m.Version)
            </div>
            <div id="@(Model.ID + "_version")" class="col-md-9">
                <span class="glyphicon glyphicon-refresh glyphicon-spin"></span>
                <script language="javascript">
                    $(document).ready(function () {
                        $("#@(Model.ID + "_version")").load("@this.Url.Action("ServiceVersion", "Home", new {id = Model.ID}, this.Request.Url.Scheme)");
                    });
                </script>
            </div>

        </div>
        <div class="row">
            <div class="col-md-3">
                @Html.Label("UI Tests")
            </div>
            <div class="col-md-9">
                @if (ViewData.Model.UITestSummaries.Count > 0)
                {
                    if (ViewData.Model.UITestSummaries[0].NotPassed > 0)
                    {
                        @Html.Raw(string.Format("{0} failed of {1} on {2}", ViewData.Model.UITestSummaries[0].NotPassed, ViewData.Model.UITestSummaries[0].Passed + ViewData.Model.UITestSummaries[0].NotPassed, ViewData.Model.UITestSummaries[0].Executed));

                    }
                    else
                    {
                        @Html.Raw(string.Format("All {0} passed on {1}", ViewData.Model.UITestSummaries[0].Passed + ViewData.Model.UITestSummaries[0].NotPassed, ViewData.Model.UITestSummaries[0].Executed));

                    }
                }
                else
                {
                    @:n/a
                }
            </div>
        </div>
            
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("API Tests")
                </div>
                <div class="col-md-9">
                    @if (ViewData.Model.APITestSummaries.Count > 0)
                    {
                        if (ViewData.Model.APITestSummaries[0].NotPassed > 0)
                        {
                            @Html.Raw(string.Format("{0} failed of {1} on {2}", ViewData.Model.APITestSummaries[0].NotPassed, ViewData.Model.APITestSummaries[0].Passed + ViewData.Model.APITestSummaries[0].NotPassed, ViewData.Model.APITestSummaries[0].Executed));

                        }
                        else
                        {
                            @Html.Raw(string.Format("All {0} passed on {1}", ViewData.Model.APITestSummaries[0].Passed + ViewData.Model.APITestSummaries[0].NotPassed, ViewData.Model.APITestSummaries[0].Executed));

                        }
                    }
                    else
                    {
                        @:n/a
         }
                </div>

            </div>


    </div>

</div>


</div>
